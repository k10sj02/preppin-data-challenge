name: Add new week folder
on:
  workflow_dispatch:
    inputs:
      new_week:
        description: 'Week to create (YYYY-WW format, e.g. 2022-01)'
        required: true
        default: 'YYYY-WW'

jobs:
  create_folder:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2


    - name: Set variables
      run: |
          # new week (week to be added)
          $new_week = '${{ github.event.inputs.new_week }}'
          $new_dir = $new_week.Substring(0,4) + "\" + $new_week

          # find the last week - if the current week is week 1, then make the prior week 52 of the previous year
          $last_week = if ($new_week.Substring(5,2) -eq '01') { [string]([int]$new_week.Substring(0,4) - 1) + '-' + '52' } else { $new_week.Substring(0,4) + '-' + ([string]([int]$new_week.Substring(5,2) - 1)).PadLeft(2,'0') }

          # find the next week - if the current week is week 52, then make the next week 1 of the next year
          $next_week = if ($new_week.Substring(5,2) -eq '52') { [string]([int]$new_week.Substring(0,4) + 1) + '-' + '01' } else { $new_week.Substring(0,4) + '-' + ([string]([int]$new_week.Substring(5,2) + 1)).PadLeft(2,'0') }
  

    - name: Create folders and templates
      run: |                   
          # create new directories for input and output files
          mkdir $new_dir\inputs
          mkdir $new_dir\outputs
          
          # github doesn't allow blank folders, so create blank text files in the new folders
          New-Item $new_dir\inputs\blank.txt
          New-Item $new_dir\outputs\blank.txt
          
          # copy the templates into the new directory
          Copy-Item '_templates\python_template.py' -Destination $new_dir\preppin-data-$new_week.py
          Copy-Item '_templates\alteryx_template.yxmd' -Destination $new_dir\preppin-data-$new_week.yxmd
          Copy-Item '_templates\README_template.md' -Destination $new_dir\README.md
          
          # list of template files to update
          $templates = @('README.md', ('preppin-data-{0}.py' -f $new_week), ('preppin-data-{0}.yxmd' -f $new_week))


    - name: Replace placeholders in templates
      run: >
          # replace the year/week values in the files
          foreach ($t in $templates) {
              # get the template text
              $file_text = Get-Content -Path "{0}\{1}\{2}" -f $new_week.Substring(0,4), $new_week, $t

              # replace placeholders
              $file_text = $file_text -replace "YYYY", $new_week.Substring(0,4)
              $file_text = $file_text -replace "LYLY", $last_week.Substring(0,4)
              $file_text = $file_text -replace "NYNY", $next_week.Substring(0,4)
              $file_text = $file_text -replace "WW", $new_week.Substring(5,2)
              $file_text = $file_text -replace "LW", $last_week.Substring(5,2)
              $file_text = $file_text -replace "NW", $next_week.Substring(5,2)

              # update the file
              Set-Content -Path "{0}\{1}\{2}" -f $new_week.Substring(0,4), $new_week, $t -Value $file_text 	  
          }


    - name: Commit and push
      run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Action"
          git add *$new_dir*
          git commit -m "Added starter files for week ${{ github.event.inputs.new_week }}"
          git push
